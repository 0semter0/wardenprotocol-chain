syntax = "proto3";
package fusionchain.treasury;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "fusionchain/treasury/params.proto";
import "fusionchain/treasury/key.proto";
import "fusionchain/treasury/mpcsign.proto";

option go_package = "gitlab.qredo.com/qrdochain/fusionchain/x/treasury/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/qrdochain/fusionchain/treasury/params";
  }

  // Queries a list of KeyRequests items.
  rpc KeyRequests(QueryKeyRequestsRequest) returns (QueryKeyRequestsResponse) {
    option (google.api.http).get =
        "/qrdochain/fusionchain/treasury/key_requests";
  }

  // Queries a single KeyRequest by its id.
  rpc KeyRequestById(QueryKeyRequestByIdRequest)
      returns (QueryKeyRequestByIdResponse) {
    option (google.api.http).get =
        "/qrdochain/fusionchain/treasury/key_request_by_id";
  }

  // Queries a list of Keys items.
  rpc Keys(QueryKeysRequest) returns (QueryKeysResponse) {
    option (google.api.http).get = "/qrdochain/fusionchain/treasury/keys";
  }

  // Queries a list of SignatureRequests items.
  rpc SignatureRequests(QuerySignatureRequestsRequest)
      returns (QuerySignatureRequestsResponse) {
    option (google.api.http).get =
        "/fusionchain/treasury/get_signature_requests";
  }

  // Queries a single SignatureRequest by its id.
  rpc SignatureRequestById(QuerySignatureRequestByIdRequest)
      returns (QuerySignatureRequestByIdResponse) {
    option (google.api.http).get =
        "/qrdochain/fusionchain/treasury/signature_request_by_id";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryKeyRequestsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  optional KeyRequestStatus status = 2;
}

message QueryKeyRequestsResponse {
  cosmos.base.query.v1beta1.PageResponse pagination = 1;
  repeated KeyRequest key_requests = 2;
}

message QueryKeyRequestByIdRequest { uint64 id = 1; }

message QueryKeyRequestByIdResponse { KeyRequest key_request = 1; }

message QueryKeysRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  optional uint64 workspace_id = 2;
}

message QueryKeysResponse {
  cosmos.base.query.v1beta1.PageResponse pagination = 1;
  repeated Key keys = 2;
}

message QuerySignatureRequestsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  optional SignRequestStatus status = 2;
}

message QuerySignatureRequestsResponse {
  cosmos.base.query.v1beta1.PageResponse pagination = 1;
  repeated SignRequest sign_requests = 2;
}

message QuerySignatureRequestByIdRequest { uint64 id = 1; }

message QuerySignatureRequestByIdResponse { SignRequest sign_request = 1; }
