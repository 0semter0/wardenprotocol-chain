syntax = "proto3";

package fusionchain.treasury;

import "fusionchain/treasury/wallet.proto";

option go_package = "gitlab.qredo.com/qrdochain/fusionchain/x/treasury/types";

// Msg defines the Msg service.
service Msg {
  // Request a new wallet to the MPC network, the wallet will belong to the
  // specified workspace.
  rpc NewWalletRequest(MsgNewWalletRequest)
      returns (MsgNewWalletRequestResponse);

  // Update an existing request by writing a result into it. This message is
  // called by MPC network nodes.
  rpc UpdateWalletRequest(MsgUpdateWalletRequest)
      returns (MsgUpdateWalletRequestResponse);

  // Request a new signature
  rpc NewSignatureRequest(MsgNewSignatureRequest)
      returns (MsgNewSignatureRequestResponse);
}

message MsgNewWalletRequest {
  string creator = 1;
  uint64 workspace_id = 2;
  WalletType wallet_type = 3;
}

message MsgNewWalletRequestResponse { uint64 id = 1; }

message MsgUpdateWalletRequest {
  string creator = 1;
  uint64 request_id = 2;
  WalletRequestStatus status = 3;

  // Holds the result of the request. If status is approved, the result will
  // contain the requested wallet's public key that can be used for signing
  // payloads.
  // If status is rejected, the result will contain the reason.
  oneof result {
    MsgNewWallet wallet = 4;
    string reject_reason = 5;
  }
}

message MsgUpdateWalletRequestResponse {}

message MsgNewWallet { bytes public_key = 2; }

message MsgNewSignatureRequest { string creator = 1; }

message MsgNewSignatureRequestResponse {}
