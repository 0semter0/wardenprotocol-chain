// Code generated by tinyjson for marshaling/unmarshaling. DO NOT EDIT.

package src

import (
	tinyjson "github.com/CosmWasm/tinyjson"
	jlexer "github.com/CosmWasm/tinyjson/jlexer"
	jwriter "github.com/CosmWasm/tinyjson/jwriter"
)

// suppress unused package warning
var (
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ tinyjson.Marshaler
)

func tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc(in *jlexer.Lexer, out *VerifyResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc(out *jwriter.Writer, in VerifyResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v VerifyResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalTinyJSON supports tinyjson.Marshaler interface
func (v VerifyResponse) MarshalTinyJSON(w *jwriter.Writer) {
	tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *VerifyResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc(&r, v)
	return r.Error()
}

// UnmarshalTinyJSON supports tinyjson.Unmarshaler interface
func (v *VerifyResponse) UnmarshalTinyJSON(l *jlexer.Lexer) {
	tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc(l, v)
}
func tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc1(in *jlexer.Lexer, out *Verify) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "policy_expression":
			out.PolicyExpression = string(in.String())
		case "participants":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Participants = make(map[string]string)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v1 string
					v1 = string(in.String())
					(out.Participants)[key] = v1
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc1(out *jwriter.Writer, in Verify) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"policy_expression\":"
		out.RawString(prefix[1:])
		out.String(string(in.PolicyExpression))
	}
	{
		const prefix string = ",\"participants\":"
		out.RawString(prefix)
		if in.Participants == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v2First := true
			for v2Name, v2Value := range in.Participants {
				if v2First {
					v2First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v2Name))
				out.RawByte(':')
				out.String(string(v2Value))
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Verify) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalTinyJSON supports tinyjson.Marshaler interface
func (v Verify) MarshalTinyJSON(w *jwriter.Writer) {
	tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Verify) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc1(&r, v)
	return r.Error()
}

// UnmarshalTinyJSON supports tinyjson.Unmarshaler interface
func (v *Verify) UnmarshalTinyJSON(l *jlexer.Lexer) {
	tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc1(l, v)
}
func tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc2(in *jlexer.Lexer, out *Test) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc2(out *jwriter.Writer, in Test) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Test) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalTinyJSON supports tinyjson.Marshaler interface
func (v Test) MarshalTinyJSON(w *jwriter.Writer) {
	tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Test) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc2(&r, v)
	return r.Error()
}

// UnmarshalTinyJSON supports tinyjson.Unmarshaler interface
func (v *Test) UnmarshalTinyJSON(l *jlexer.Lexer) {
	tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc2(l, v)
}
func tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc3(in *jlexer.Lexer, out *InstantiateMsg) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc3(out *jwriter.Writer, in InstantiateMsg) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v InstantiateMsg) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalTinyJSON supports tinyjson.Marshaler interface
func (v InstantiateMsg) MarshalTinyJSON(w *jwriter.Writer) {
	tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *InstantiateMsg) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc3(&r, v)
	return r.Error()
}

// UnmarshalTinyJSON supports tinyjson.Unmarshaler interface
func (v *InstantiateMsg) UnmarshalTinyJSON(l *jlexer.Lexer) {
	tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc3(l, v)
}
func tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc4(in *jlexer.Lexer, out *ExecuteMsg) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "verify":
			if in.IsNull() {
				in.Skip()
				out.Verify = nil
			} else {
				if out.Verify == nil {
					out.Verify = new(Verify)
				}
				(*out.Verify).UnmarshalTinyJSON(in)
			}
		case "test":
			if in.IsNull() {
				in.Skip()
				out.Test = nil
			} else {
				if out.Test == nil {
					out.Test = new(Test)
				}
				(*out.Test).UnmarshalTinyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc4(out *jwriter.Writer, in ExecuteMsg) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"verify\":"
		out.RawString(prefix[1:])
		if in.Verify == nil {
			out.RawString("null")
		} else {
			(*in.Verify).MarshalTinyJSON(out)
		}
	}
	{
		const prefix string = ",\"test\":"
		out.RawString(prefix)
		if in.Test == nil {
			out.RawString("null")
		} else {
			(*in.Test).MarshalTinyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ExecuteMsg) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalTinyJSON supports tinyjson.Marshaler interface
func (v ExecuteMsg) MarshalTinyJSON(w *jwriter.Writer) {
	tinyjson954708aaEncodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ExecuteMsg) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc4(&r, v)
	return r.Error()
}

// UnmarshalTinyJSON supports tinyjson.Unmarshaler interface
func (v *ExecuteMsg) UnmarshalTinyJSON(l *jlexer.Lexer) {
	tinyjson954708aaDecodeGithubComSashadukeCosmwasmGoExampleFusionBlackbirdContractSrc4(l, v)
}
